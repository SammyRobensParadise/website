{"version":3,"sources":["components/CookieBar.jsx"],"names":["Wrapper","styled","div","UIStyle","UIColors","white","p","shoudRender","Text","black","Close","button","A","a","gold","CookieBar","useState","setRenderState","useCookies","setCookie","onClick","targetDate","Date","setDate","getDate","path","expires","role","aria-label","href","emailLink"],"mappings":"olDAQA,IAAMA,EAAUC,UAAOC,IAAV,IAKSC,IAAQC,SAASC,OAC1B,SAACC,GAAD,OAAQA,EAAEC,YAAc,UAAY,UAK3CC,EAAOP,UAAOK,EAAV,IAGCH,IAAQC,SAASK,OAYtBC,EAAQT,UAAOU,OAAV,IAqBaR,IAAQC,SAASK,OASnCG,EAAIX,UAAOY,EAAV,IAEIV,IAAQC,SAASK,MAGfN,IAAQC,SAASU,MAgCfC,UA3BG,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACfT,EADe,KACFU,EADE,OAGOC,YAAW,CAAC,+BAHnB,mBAGNC,GAHM,WAatB,OACE,kBAACnB,EAAD,CAASO,YAAaA,GACpB,kBAACC,EAAD,KACE,kBAACE,EAAD,CAAOU,QAZS,WACpB,IAAIC,EAAa,IAAIC,KACrBD,EAAWE,QAAQF,EAAWG,UAAY,IAC1CP,GAAe,GACfE,EAAU,6BAA8B,OAAQ,CAC9CM,KAAM,IACNC,QAASL,OAKT,OAEO,IACL,0BAAMM,KAAK,MAAMC,aAAW,gBAA5B,gBAHF,4CAMiC,kBAAChB,EAAD,CAAGiB,KAAMC,KAAT","file":"static/js/20.57986db6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { UIStyle } from '../constants/config'\nimport styled from 'styled-components'\nimport { useCookies } from 'react-cookie'\nimport { emailLink } from '../constants/links'\nimport '../css/styles/styles.css'\nimport '../css/styles/App.css'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0px;\n  height: 100px;\n  width: 100%;\n  background-color: ${UIStyle.UIColors.white};\n  display: ${(p) => (p.shoudRender ? 'inherit' : 'none')};\n  box-shadow: 0px -4px 40px -17px rgba(0, 0, 0, 0.75);\n  overflow-x: hidden;\n  overflow-y: hidden;\n`\nconst Text = styled.p`\n  font-family: Helvetica Neue;\n  letter-spacing: 0px;\n  color: ${UIStyle.UIColors.black};\n  font-weight: 400;\n  font-size: 22px;\n  text-align: center;\n  line-height: 50px;\n  @media screen and (max-width: 1260px) {\n    line-height: 40px;\n  }\n  @media screen and (max-width: 460px) {\n    font-size: 18px;\n  }\n`\nconst Close = styled.button`\n  background: none;\n  position: absolute;\n  right: 32px;\n  top: 10px;\n  width: 32px;\n  height: 32px;\n  opacity: 0.5;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    left: 15px;\n    content: ' ';\n    height: 33px;\n    width: 2px;\n    background-color: ${UIStyle.UIColors.black};\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`\nconst A = styled.a`\n  text-decoration: underline;\n  color: ${UIStyle.UIColors.black};\n  transition: all 0.3s ease;\n  &:hover {\n    color: ${UIStyle.UIColors.gold};\n    letter-spacing: 0.5px;\n  }\n`\n\nconst CookieBar = () => {\n  const [shoudRender, setRenderState] = useState(true)\n  // eslint-disable-next-line no-unused-vars\n  const [cookies, setCookie] = useCookies(['hide_cookie_bar_on_closure'])\n  const handleClosure = () => {\n    let targetDate = new Date()\n    targetDate.setDate(targetDate.getDate() + 10)\n    setRenderState(false)\n    setCookie('hide_cookie_bar_on_closure', 'true', {\n      path: '/',\n      expires: targetDate,\n    })\n  }\n  return (\n    <Wrapper shoudRender={shoudRender}>\n      <Text>\n        <Close onClick={handleClosure} />\n        Some{' '}\n        <span role=\"img\" aria-label=\"cookie-emoji\">\n          🍪\n        </span>\n        ’s say you’ve been here before <A href={emailLink}>Reach out and let’s connect!</A>\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default CookieBar\n"],"sourceRoot":""}